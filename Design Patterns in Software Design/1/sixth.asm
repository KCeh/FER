; Listing generated by Microsoft (R) Optimizing Compiler Version 19.13.26128.0 

	TITLE	C:\FER\VI\OOUP\lab\1\visual cpp\fourth\sixth\sixth.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	___local_stdio_printf_options
PUBLIC	__vfprintf_l
PUBLIC	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
PUBLIC	_printf
PUBLIC	??0Base@@QAE@XZ					; Base::Base
PUBLIC	?virtualnaMetoda@Base@@UAEXXZ			; Base::virtualnaMetoda
PUBLIC	?metoda@Base@@QAEXXZ				; Base::metoda
PUBLIC	??0Derived@@QAE@XZ				; Derived::Derived
PUBLIC	?virtualnaMetoda@Derived@@UAEXXZ		; Derived::virtualnaMetoda
PUBLIC	_main
PUBLIC	?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage
PUBLIC	??_7Base@@6B@					; Base::`vftable'
PUBLIC	??_C@_0BO@JEPAAMCM@ja?5sam?5bazna?5implementacija?$CB?6?$AA@ ; `string'
PUBLIC	??_C@_0O@MCCJMEK@Metoda?5kaze?3?5?$AA@		; `string'
PUBLIC	??_7Derived@@6B@				; Derived::`vftable'
PUBLIC	??_C@_0CB@KDAOENLO@ja?5sam?5izvedena?5implementacija?$CB?6@ ; `string'
PUBLIC	??_R4Base@@6B@					; Base::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVBase@@@8				; Base `RTTI Type Descriptor'
PUBLIC	??_R3Base@@8					; Base::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Base@@8					; Base::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Base@@8				; Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4Derived@@6B@				; Derived::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDerived@@@8				; Derived `RTTI Type Descriptor'
PUBLIC	??_R3Derived@@8					; Derived::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Derived@@8					; Derived::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Derived@@8			; Derived::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	??2@YAPAXI@Z:PROC				; operator new
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp____acrt_iob_func:PROC
EXTRN	__imp____stdio_common_vfprintf:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA
_BSS	SEGMENT
?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA DQ 01H DUP (?) ; `__local_stdio_printf_options'::`2'::_OptionsStorage
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@Derived@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Derived@@8 DD FLAT:??_R0?AVDerived@@@8	; Derived::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Derived@@8
rdata$r	ENDS
;	COMDAT ??_R2Derived@@8
rdata$r	SEGMENT
??_R2Derived@@8 DD FLAT:??_R1A@?0A@EA@Derived@@8	; Derived::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Base@@8
rdata$r	ENDS
;	COMDAT ??_R3Derived@@8
rdata$r	SEGMENT
??_R3Derived@@8 DD 00H					; Derived::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2Derived@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVDerived@@@8
data$r	SEGMENT
??_R0?AVDerived@@@8 DD FLAT:??_7type_info@@6B@		; Derived `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVDerived@@', 00H
data$r	ENDS
;	COMDAT ??_R4Derived@@6B@
rdata$r	SEGMENT
??_R4Derived@@6B@ DD 00H				; Derived::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVDerived@@@8
	DD	FLAT:??_R3Derived@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Base@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Base@@8 DD FLAT:??_R0?AVBase@@@8		; Base::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Base@@8
rdata$r	ENDS
;	COMDAT ??_R2Base@@8
rdata$r	SEGMENT
??_R2Base@@8 DD	FLAT:??_R1A@?0A@EA@Base@@8		; Base::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Base@@8
rdata$r	SEGMENT
??_R3Base@@8 DD	00H					; Base::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Base@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVBase@@@8
data$r	SEGMENT
??_R0?AVBase@@@8 DD FLAT:??_7type_info@@6B@		; Base `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVBase@@', 00H
data$r	ENDS
;	COMDAT ??_R4Base@@6B@
rdata$r	SEGMENT
??_R4Base@@6B@ DD 00H					; Base::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVBase@@@8
	DD	FLAT:??_R3Base@@8
rdata$r	ENDS
;	COMDAT ??_C@_0CB@KDAOENLO@ja?5sam?5izvedena?5implementacija?$CB?6@
CONST	SEGMENT
??_C@_0CB@KDAOENLO@ja?5sam?5izvedena?5implementacija?$CB?6@ DB 'ja sam iz'
	DB	'vedena implementacija!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7Derived@@6B@
CONST	SEGMENT
??_7Derived@@6B@ DD FLAT:??_R4Derived@@6B@		; Derived::`vftable'
	DD	FLAT:?virtualnaMetoda@Derived@@UAEXXZ
CONST	ENDS
;	COMDAT ??_C@_0O@MCCJMEK@Metoda?5kaze?3?5?$AA@
CONST	SEGMENT
??_C@_0O@MCCJMEK@Metoda?5kaze?3?5?$AA@ DB 'Metoda kaze: ', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0BO@JEPAAMCM@ja?5sam?5bazna?5implementacija?$CB?6?$AA@
CONST	SEGMENT
??_C@_0BO@JEPAAMCM@ja?5sam?5bazna?5implementacija?$CB?6?$AA@ DB 'ja sam b'
	DB	'azna implementacija!', 0aH, 00H		; `string'
CONST	ENDS
;	COMDAT ??_7Base@@6B@
CONST	SEGMENT
??_7Base@@6B@ DD FLAT:??_R4Base@@6B@			; Base::`vftable'
	DD	FLAT:?virtualnaMetoda@Base@@UAEXXZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$_main DD 0ffffffffH
	DD	FLAT:__unwindfunclet$_main$0
__ehfuncinfo$_main DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$_main
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\fer\vi\ooup\lab\1\visual cpp\fourth\sixth\sixth.cpp
;	COMDAT _main
_TEXT	SEGMENT
tv75 = -244						; size = 4
$T2 = -236						; size = 4
$T3 = -224						; size = 4
_pd$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_main	PROC						; COMDAT

	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$_main
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 232				; 000000e8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-244]
	mov	ecx, 58					; 0000003aH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax

	push	4
	call	??2@YAPAXI@Z				; operator new
	add	esp, 4
	mov	DWORD PTR $T2[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	cmp	DWORD PTR $T2[ebp], 0
	je	SHORT $LN3@main
	mov	ecx, DWORD PTR $T2[ebp]
	call	??0Derived@@QAE@XZ			; Derived::Derived
	mov	DWORD PTR tv75[ebp], eax
	jmp	SHORT $LN4@main
$LN3@main:
	mov	DWORD PTR tv75[ebp], 0
$LN4@main:
	mov	eax, DWORD PTR tv75[ebp]
	mov	DWORD PTR $T3[ebp], eax
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	mov	ecx, DWORD PTR $T3[ebp]
	mov	DWORD PTR _pd$[ebp], ecx

	mov	ecx, DWORD PTR _pd$[ebp]
	call	?metoda@Base@@QAEXXZ			; Base::metoda

	xor	eax, eax
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 244				; 000000f4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$_main$0:
	push	4
	mov	eax, DWORD PTR $T2[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
	ret	0
__ehhandler$_main:
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-248]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$_main
	jmp	___CxxFrameHandler3
text$x	ENDS
_main	ENDP
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\fer\vi\ooup\lab\1\visual cpp\fourth\sixth\sixth.cpp
;	COMDAT ?virtualnaMetoda@Derived@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?virtualnaMetoda@Derived@@UAEXXZ PROC			; Derived::virtualnaMetoda, COMDAT
; _this$ = ecx

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

	push	OFFSET ??_C@_0CB@KDAOENLO@ja?5sam?5izvedena?5implementacija?$CB?6@
	call	_printf
	add	esp, 4

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?virtualnaMetoda@Derived@@UAEXXZ ENDP			; Derived::virtualnaMetoda
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\fer\vi\ooup\lab\1\visual cpp\fourth\sixth\sixth.cpp
;	COMDAT ??0Derived@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Derived@@QAE@XZ PROC					; Derived::Derived, COMDAT
; _this$ = ecx

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0Base@@QAE@XZ				; Base::Base
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Derived@@6B@

	mov	ecx, DWORD PTR _this$[ebp]
	call	?metoda@Base@@QAEXXZ			; Base::metoda

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Derived@@QAE@XZ ENDP					; Derived::Derived
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\fer\vi\ooup\lab\1\visual cpp\fourth\sixth\sixth.cpp
;	COMDAT ?metoda@Base@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?metoda@Base@@QAEXXZ PROC				; Base::metoda, COMDAT
; _this$ = ecx

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

	push	OFFSET ??_C@_0O@MCCJMEK@Metoda?5kaze?3?5?$AA@
	call	_printf
	add	esp, 4

	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?metoda@Base@@QAEXXZ ENDP				; Base::metoda
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\fer\vi\ooup\lab\1\visual cpp\fourth\sixth\sixth.cpp
;	COMDAT ?virtualnaMetoda@Base@@UAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?virtualnaMetoda@Base@@UAEXXZ PROC			; Base::virtualnaMetoda, COMDAT
; _this$ = ecx

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx

	push	OFFSET ??_C@_0BO@JEPAAMCM@ja?5sam?5bazna?5implementacija?$CB?6?$AA@
	call	_printf
	add	esp, 4

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?virtualnaMetoda@Base@@UAEXXZ ENDP			; Base::virtualnaMetoda
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\fer\vi\ooup\lab\1\visual cpp\fourth\sixth\sixth.cpp
;	COMDAT ??0Base@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0Base@@QAE@XZ PROC					; Base::Base, COMDAT
; _this$ = ecx

	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 51					; 00000033H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Base@@6B@

	mov	ecx, DWORD PTR _this$[ebp]
	call	?metoda@Base@@QAEXXZ			; Base::metoda

	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0Base@@QAE@XZ ENDP					; Base::Base
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\stdio.h
;	COMDAT _printf
_TEXT	SEGMENT
__ArgList$ = -20					; size = 4
__Result$ = -8						; size = 4
__Format$ = 8						; size = 4
_printf	PROC						; COMDAT

; 952  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 953  :         int _Result;
; 954  :         va_list _ArgList;
; 955  :         __crt_va_start(_ArgList, _Format);

	call	??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ; __vcrt_va_start_verify_argument_type<char const * const>
	lea	eax, DWORD PTR __Format$[ebp+4]
	mov	DWORD PTR __ArgList$[ebp], eax

; 956  :         _Result = _vfprintf_l(stdout, _Format, NULL, _ArgList);

	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	push	0
	mov	ecx, DWORD PTR __Format$[ebp]
	push	ecx
	mov	esi, esp
	push	1
	call	DWORD PTR __imp____acrt_iob_func
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	call	__vfprintf_l
	add	esp, 16					; 00000010H
	mov	DWORD PTR __Result$[ebp], eax

; 957  :         __crt_va_end(_ArgList);

	mov	DWORD PTR __ArgList$[ebp], 0

; 958  :         return _Result;

	mov	eax, DWORD PTR __Result$[ebp]

; 959  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_printf	ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File e:\program files (x86)\microsoft visual studio\2017\community\vc\tools\msvc\14.13.26128\include\vadefs.h
;	COMDAT ??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ
_TEXT	SEGMENT
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ PROC	; __vcrt_va_start_verify_argument_type<char const * const>, COMDAT

; 150  :         {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 151  :             static_assert(!__vcrt_va_list_is_reference<_Ty>::__the_value, "va_start argument must not have reference type and must not be parenthesized");
; 152  :         }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
??$__vcrt_va_start_verify_argument_type@QBD@@YAXXZ ENDP	; __vcrt_va_start_verify_argument_type<char const * const>
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\stdio.h
;	COMDAT __vfprintf_l
_TEXT	SEGMENT
__Stream$ = 8						; size = 4
__Format$ = 12						; size = 4
__Locale$ = 16						; size = 4
__ArgList$ = 20						; size = 4
__vfprintf_l PROC					; COMDAT

; 640  :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 641  :         return __stdio_common_vfprintf(_CRT_INTERNAL_LOCAL_PRINTF_OPTIONS, _Stream, _Format, _Locale, _ArgList);

	mov	esi, esp
	mov	eax, DWORD PTR __ArgList$[ebp]
	push	eax
	mov	ecx, DWORD PTR __Locale$[ebp]
	push	ecx
	mov	edx, DWORD PTR __Format$[ebp]
	push	edx
	mov	eax, DWORD PTR __Stream$[ebp]
	push	eax
	call	___local_stdio_printf_options
	mov	ecx, DWORD PTR [eax+4]
	push	ecx
	mov	edx, DWORD PTR [eax]
	push	edx
	call	DWORD PTR __imp____stdio_common_vfprintf
	add	esp, 24					; 00000018H
	cmp	esi, esp
	call	__RTC_CheckEsp

; 642  :     }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
__vfprintf_l ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\program files (x86)\windows kits\10\include\10.0.16299.0\ucrt\corecrt_stdio_config.h
;	COMDAT ___local_stdio_printf_options
_TEXT	SEGMENT
___local_stdio_printf_options PROC			; COMDAT

; 85   :     {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 86   :         static unsigned __int64 _OptionsStorage;
; 87   :         return &_OptionsStorage;

	mov	eax, OFFSET ?_OptionsStorage@?1??__local_stdio_printf_options@@9@4_KA ; `__local_stdio_printf_options'::`2'::_OptionsStorage

; 88   :     }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
___local_stdio_printf_options ENDP
_TEXT	ENDS
END
